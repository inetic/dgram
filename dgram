#!/usr/bin/python3

import socket
import sys
import argparse

def parse_ep(s):
    ip,port = s.split(':')
    return (ip, int(port))


def make_socket():
    return socket.socket(socket.AF_INET, # Internet
                         socket.SOCK_DGRAM) # UDP


def send(sock, l_ep, r_ep, msg):
    sock.sendto(msg.encode('utf-8'), parse_ep(r_ep))

def recv(sock, l_ep):
    while True:
        try:
            data, addr = sock.recvfrom(1024) # buffer size is 1024 bytes
            print(addr[0] + ":" + str(addr[1]) + " -> " + data.decode("utf-8"))
        except KeyboardInterrupt:
            break


parser = argparse.ArgumentParser()

# Receive packets
# dgram -l 0.0.0.0:6666
#
# Send packet
# dgram -r x.y.z.w:6666 "hello dgram"
parser.add_argument('-l', help="local endpoint")
parser.add_argument('-r', help="remote endpoint")
parser.add_argument('m', nargs='?', help="message to send")

args = parser.parse_args()

if args.m:
    sock = make_socket();

    if args.l != None:
        sock.bind(parse_ep(args.l))

    send(sock, args.l, args.r, args.m)

    if args.l:
        recv(sock, args.l)
else:
    sock = make_socket();
    sock.bind(parse_ep(args.l))
    recv(sock, args.l)
